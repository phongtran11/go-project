# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - name: Create env file
        run: |
          touch .env
          echo "DB_ROOT_PASSWORD=$GO_PROJECT_DB_ROOT_PASSWORD" >> .env   
          echo "DB_DATABASE=$GO_PROJECT_DB_DATABASE" >> .env   
          echo "DB_USERNAME=$GO_PROJECT_DB_USERNAME" >> .env   
          echo "DB_PASSWORD=$GO_PROJECT_DB_PASSWORD" >> .env   
          echo "DB_HOST=$GO_PROJECT_DB_HOST" >> .env   
          echo "DB_PORT=$GO_PROJECT_DB_PORT" >> .env   
          echo "JTW_SECRET_KEY=$GO_PROJECT_JTW_SECRET_KEY" >> .env   
          echo "JTW_EXPIRATION_TIME=$GO_PROJECT_JTW_EXPIRATION_TIME" >> .env   
          echo "JTW_REFRESH_SECRET_KEY=$GO_PROJECT_JTW_REFRESH_SECRET_KEY" >> .env   
          echo "JTW_REFRESH_EXPIRATION_TIME=$GO_PROJECT_JTW_REFRESH_EXPIRATION_TIME" >> .env 
          cat .env
      - name: Install dependencies
        run: |
          cd docker && docker-compose up -d
